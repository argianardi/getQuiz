import Head from "next/head";
import { useState } from "react";
import { GiGamepadCross } from "react-icons/gi";
import { useForm } from "react-hook-form";
import ErrorMessage from "../components/ErrorMessage";
import { GetSignInErrorMessage, SignIn } from "../services/firebase";
import withUnProtected from "../hoc/withUnProtected";

const Home = () => {
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();

  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");

  const onSubmit = async (values) => {
    const { email, password } = values;
    try {
      await SignIn(email, password);
    } catch (error) {
      const message = GetSignInErrorMessage(error.code);
      console.log(message);
    }
  };

  return (
    <>
      <Head>
        <title>getQuiz</title>
        <meta name="description" content="Generated by create next app" />
        <link rel={GiGamepadCross} href={GiGamepadCross} />
      </Head>

      <div className="h-screen min-w-full flex flex-col justify-center bg-[url('https://cdn.discordapp.com/attachments/1017919526748299295/1021418083732164680/unsplash_pUAM5hPaCRI.png')] px-5 bg-cover bg-center">
        <div className="shadow-md shadow-slate-600 rounded-md p-2 sm:p-3 w-full sm:w-[500px] mx-auto bg-white/10 effectBlur ">
          <div className="mb-2 w-full  mx-auto">
            <GiGamepadCross size={50} className="mx-auto" />
            <p className="text-2xl font-bold text-center border-b-2 border-blue-900 mb-5 sm:text-3xl md:text-4xl">
              Welcome to getQuiz
            </p>
          </div>

          <div className="flex flex-wrap justify-center ">
            {/* form Login */}
            <form
              className=" bg-putihAlta w-full sm:w-[500px] flex flex-col gap-4"
              onSubmit={handleSubmit(onSubmit)}
            >
              <div className="px-0 sm:px-3 ">
                <input
                  type="email"
                  className="font-Roboto font-normal w-full text-base pl-6 border-[#25732D] text-black rounded-xl shadow-lg block  p-3 dark:shadow-md  "
                  placeholder="Email"
                  required
                  onChange={(e) => setEmail(e.target.value)}
                  {...register("email", { required: true })}
                />
                <ErrorMessage errors={errors.email} />
              </div>
              <div className=" px-0 sm:px-3">
                <input
                  type="password"
                  className=" w-full  font-Roboto font-normal text-base pl-6 border-[#25732D] text-black rounded-xl shadow-lg  block  py-3  "
                  placeholder="Password"
                  required
                  onChange={(e) => setPassword(e.target.value)}
                  {...register("password", { required: true, minLength: 6 })}
                />
                <ErrorMessage errors={errors.password} />
              </div>
              <div className="w-full px-3">
                <button
                  className="w-full py-2 mt-8 text-xl text-white rounded-sm shadow-lg hover:bg-orange-600 font-poppins bg-blue-900"
                  type="submit"
                >
                  Login
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </>
  );
};

export default withUnProtected(Home);
